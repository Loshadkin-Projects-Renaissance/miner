# -*- coding: utf-8 -*-
import os
import telebot
import time
import telebot
import random
import info
import threading
from emoji import emojize
from telebot import types
from pymongo import MongoClient

from requests.exceptions import ReadTimeout
from requests.exceptions import ConnectionError


token = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot(token)
vip=[441399484, 55888804]


client1=os.environ['database']
client=MongoClient(client1)
db=client.farmer
users=db.users


@bot.message_handler(commands=['start'])
def start(m):
   if users.find_one({'id':m.from_user.id})==None and m.chat.id==m.from_user.id:
      users.insert_one(createuser(m.from_user.id, m.from_user.first_name))
      kb=types.ReplyKeyboardMarkup()
      kb.add(types.KeyboardButton('üë∑üèª–î–æ–±—ã—á–∞'))
      bot.send_message(m.chat.id, '''–ó–¥—Ä–∞—Å—Ç–≤—É–π, —Ç—ã –ø–æ–ø–∞–ª –≤ –∏–≥—Ä—É "Survival simulator"!
*–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:*
–ù–∞ –∑–µ–º–ª–µ –ø–æ—è–≤–∏–ª—Å—è –≤–∏—Ä—É—Å, –ø—Ä–µ–≤—Ä–∞—â–∞—é—â–∏–π –ª—é–¥–µ–π –≤ –∑–æ–º–±–∏, –ø–µ—Ä–µ–¥–∞—é—â–∏–π—Å—è —á–µ—Ä–µ–∑ —É–∫—É—Å. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—á—Ç–∏ –≤—Å—ë
–Ω–∞—Å–µ–ª–µ–Ω–∏–µ –∑–µ–º–ª–∏ –±—ã–ª–æ –∑–∞—Ä–∞–∂–µ–Ω–æ, –∏ –æ—Å—Ç–∞–≤—à–∏–º—Å—è –≤ –∂–∏–≤—ã—Ö –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å, –∫—Ä–æ–º–µ –ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–µ–æ–±–∏—Ç–∞–µ–º—ã–µ –æ—Å—Ç—Ä–æ–≤–∞.
–¢–∞–∫ –∫–∞–∫ –≤—Å–µ, –∫–æ–≥–æ –≤—ã –∑–Ω–∞–ª–∏, –±—ã–ª–∏ –∑–∞—Ä–∞–∂–µ–Ω—ã, –≤—ã –≤ –æ–¥–∏–Ω–æ—á–∫—É –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ –ø–ª–æ—Ç, –≤–∑—è–ª–∏ –º–∏–Ω–∏–º—É–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –≤–µ—â–µ–π, –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –ø–ª–∞–≤–∞–Ω–∏–µ.
–ß–µ—Ä–µ–∑ 3 –¥–Ω—è –ø–ª–∞–≤–∞–Ω–∏—è, –≤ 5 —á–∞—Å–æ–≤ —É—Ç—Ä–∞, –≤—ã —É–≤–∏–¥–µ–ª–∏ –±–µ—Ä–µ–≥ –∫–∞–∫–æ–≥–æ-—Ç–æ –æ—Å—Ç—Ä–æ–≤–∞. –ü–µ—Ä–≤—ã–º –¥–µ–ª–æ–º, –ø–æ—Å–ª–µ –≤—ã—Å–∞–¥–∫–∏, –≤—ã —Ä–µ—à–∏–ª–∏, —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º.
–î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –¥–µ—Ä–µ–≤–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–æ–±—ã–≤–∞—Ç—å –µ–≥–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üë∑–î–æ–±—ã—á–∞", –∞ –∑–∞—Ç–µ–º - –∫–Ω–æ–ø–∫—É "üå≤–õ–µ—Å".''', parse_mode='markdown', reply_markup=kb)


 
@bot.message_handler(commands=['inventory'])
def inventory(m):
   x=users.find_one({'id':m.from_user.id})
   if x!=None:
      bot.send_message(m.chat.id, '–£–≥–æ–ª—å: '+str(x['coal'])+'\n'+
          '–ñ–µ–ª–µ–∑–æ: '+str(x['iron'])+'\n'+
          '–ó–æ–ª–æ—Ç–æ: '+str(x['gold'])+'\n'+
          '–ê–ª–º–∞–∑—ã: '+str(x['diamond'])+'\n'+
          '–î–µ—Ä–µ–≤–æ: '+str(x['wood'])+'\n'+
          '–ö–∞–º–µ–Ω—å: '+str(x['rock'])+'\n'+
          '–î–µ–Ω—å–≥–∏: '+str(x['money'])+'\n'+
          '–ü–µ—Å–æ–∫: '+str(x['sand'])+'\n'+
          '–°–æ–ª—å: '+str(x['salt'])+'\n'+
          '–†—É–±–∏–Ω—ã: '+str(x['ruby'])+'\n'+
          '–ò—Ä–∏–¥–∏–π: '+str(x['iridium'])+'\n'+
          '–°–∞—Ö–∞—Ä: '+str(x['shugar'])+'\n'+
          '–ì—Ä–∏–±—ã: '+str(x['mushroom'])+'\n'+
          '–ú—è—Å–æ: '+str(x['meat'])+'\n'+
          '–†—ã–±–∞: '+str(x['fish'])+'\n'+
          '–Ø–π—Ü–∞: '+str(x['egg'])+'\n'+
          '–í–æ–¥–∞: '+str(x['water'])+'\n')


@bot.message_handler(content_types=['text'])
def text(m):
   if m.from_user.id==m.chat.id:
    x=users.find_one({'id':m.from_user.id})
    if x!=None:
      if x['tutorial']==1:
         if m.text=='üë∑üèª–î–æ–±—ã—á–∞':
            kb=types.ReplyKeyboardMarkup()
            kb.add(types.KeyboardButton('üå≤–õ–µ—Å'))
            bot.send_message(m.chat.id, '–ö—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å—Å—è?', reply_markup=kb)
         elif m.text=='üå≤–õ–µ—Å' and x['tforest']==0:
            bot.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –ª–µ—Å. –í–µ—Ä–Ω—ë—Ç–µ—Å—å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É (–ú–∏–Ω—É—Ç–∞ –≤–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ = 15 –º–∏–Ω—É—Ç –∂–∏–∑–Ω–∏ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ).')
            users.update_one({'id':m.from_user.id}, {'$set':{'tforest':1}})
            t=threading.Timer(60, tforest, args=[m.from_user.id])
            t.start()
         elif m.text=='üî®–ü–æ—Å—Ç—Ä–æ–π–∫–∞':
            kb=types.ReplyKeyboardMarkup()
            kb.add(types.KeyboardButton('‚õ∫Ô∏è–î–æ–º'))
            bot.send_message(m.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å?', reply_markup=kb)
         elif m.text=='‚õ∫Ô∏è–î–æ–º' and x['thouse']==0:
            users.update_one({'id':m.from_user.id}, {'$set':{'thouse':1}})
            bot.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º. –í–µ—Ä–Ω—ë—Ç–µ—Å—å —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã.')
            users.update_one({'id':m.from_user.id}, {'$inc':{'wood':-1000}})
            t=threading.Timer(120, thouse, args=[m.from_user.id])
            t.start()
      else:
         if m.text=='–û–±–æ –º–Ω–µ':
            bot.send_message(m.chat.id, '–ü—Ä–∏–≤–µ—Ç, '+x['name']+'!\n'+
                             '–ì–æ–ª–æ–¥: '+str(x['hunger'])+'/'+str(x['maxhunger'])+'üçó\n'+
                             '–£—Ä–æ–≤–µ–Ω—å: '+str(x['level'])+'\n'+
                             '–û–ø—ã—Ç: '+str(x['exp'])+'\n'+
                             '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: /inventory')
            
         elif m.text=='–î–æ–±—ã—á–∞':
            kb=types.ReplyKeyboardMarkup()
            kb.add(types.KeyboardButton('üå≤–õ–µ—Å'))
            kb.add(types.KeyboardButton('üï≥–ü–µ—â–µ—Ä–∞'))
            kb.add(types.KeyboardButton('üêñ–û—Ö–æ—Ç–∞'))
            kb.add(types.KeyboardButton('–ù–∞–∑–∞–¥'))
            bot.send_message(m.chat.id, '–ö—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è?', reply_markup=kb)
            
         elif m.text=='üå≤–õ–µ—Å':
          if x['farming']==0:
            bot.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –ª–µ—Å. –í–µ—Ä–Ω—ë—Ç–µ—Å—å —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç.')
            users.update_one({'id':m.from_user.id}, {'$set':{'farming':1}})
            t=threading.Timer(900, forest, args=[m.from_user.id])
            t.start()
          else:
            bot.send_message(m.chat.id, '–í—ã —É–∂–µ –∑–∞–Ω—è—Ç—ã –¥–æ–±—ã—á–µ–π —Ä–µ—Å—É—Ä—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
            
            
               
            
def forest(id):
   woodtexts=['–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ –ª–µ—Å–∞. –í —ç—Ç–æ—Ç —Ä–∞–∑ —É–¥–∞–ª–æ—Å—å –¥–æ–±—ã—Ç—å:\n']
   wood=random.randint(1,100)
   rock=random.randint(1,100)
   meat=random.randint(1,100)
   gwood=0
   grock=0
   gmeat=0
   if wood<=75:
      wood=1
      gwood=random.randint(4, 15)
   else:
      wood=0
   if rock<=15:
      rock=1
      grock=random.randint(1,8)
   else:
      rock=0
   if meat<=15:
      meat=1
      gmeat=random.randint(1,3)
   else:
      meat=0
   recources=''  
   text=random.choice(woodtexts)
   if wood==1:
      recources+='–î–µ—Ä–µ–≤–æ: '+str(gwood)+'\n'
   if rock==1:
      recources+='–ö–∞–º–µ–Ω—å: '+str(grock)+'\n'
   if meat==1:
      recources+='–ú—è—Å–æ: '+str(gmeat)+'\n'
   text=random.choice(woodtexts)
   if wood==0 and rock==0 and meat==0:
      text='–í —ç—Ç–æ—Ç —Ä–∞–∑ –Ω–∏—á–µ–≥–æ –¥–æ–±—ã—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å. –ó–∞—Ç–æ –≤—ã –ø—Ä–æ–≥—É–ª—è–ª–∏—Å—å –ø–æ –ª–µ—Å—É –∏ —Ö–æ—Ä–æ—à–æ –æ—Ç–¥–æ—Ö–Ω—É–ª–∏!'
    
   users.update_one({'id':id}, {'$inc':{'wood':gwood}})
   users.update_one({'id':id}, {'$inc':{'meat':gmeat}})
   users.update_one({'id':id}, {'$inc':{'rock':grock}})
   users.update_one({'id':id}, {'$set':{'farming':0}})
   bot.send_message(id, text+recources)
            

def tforest(id):
   kb=types.ReplyKeyboardMarkup()
   kb.add(types.KeyboardButton('üî®–ü–æ—Å—Ç—Ä–æ–π–∫–∞'))
   users.update_one({'id':id}, {'$inc':{'wood':1000}})
   bot.send_message(id, '–ü—Ä–æ—à–ª–æ –ø–æ–ª —á–∞—Å–∞. –° –ø–æ–º–æ—â—å—é —Ç–æ–ø–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–∑—è–ª–∏ —Å —Å–æ–±–æ–π –≤ –ø—É—Ç—å, –≤—ã –¥–æ–±—ã–ª–∏ 1000 –µ–¥. –¥–µ—Ä–µ–≤–∞ -'+
   ' –≠—Ç–æ–≥–æ –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å –Ω–∞ –ø–æ—Å—Ç—Ä–æ–π–∫—É –¥–æ–º–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üî®–ü–æ—Å—Ç—Ä–æ–π–∫–∞", –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç "‚õ∫Ô∏è–î–æ–º".', reply_markup=kb)
 


def thouse(id):
   kb=types.ReplyKeyboardMarkup()
   kb.add('–î–æ–±—ã—á–∞')
   kb.add('–î–æ–º')
   kb.add('–û–±–æ –º–Ω–µ')
   bot.send_message(id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø–æ—Å—Ç—Ä–æ–∏–ª–∏ —Å–µ–±–µ –¥–æ–º! –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–ø–∞—Å—Ç–∏—Å—å –æ—Ç –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥—ã –∏ –æ—Ç —Ö–æ–ª–æ–¥–∞.'+
                    ' –î–∞–ª—å—à–µ –≤—ã–∂–∏–≤–∞—Ç—å –ø—Ä–∏–¥—ë—Ç—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –ù–æ –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ: –¥–æ–±—ã–≤–∞—è —Ä–µ—Å—É—Ä—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤, –∏ –µ—Å–ª–∏'+
                    ' –æ–Ω–∏ –±—É–¥—É—Ç —Å–∏–ª—å–Ω–µ–µ –≤–∞—Å - –¥–æ–±—ã—á—É –ø—Ä–∏–¥—ë—Ç—Å—è –æ—Ç–¥–∞—Ç—å.', reply_markup=kb)
   users.update_one({'id':id}, {'$set':{'tutorial':0}})
                    
                   
              
         
 
def createuser(id, name):
   return{'id':id,
          'name':name,
          'coal':0,
          'iron':0,
          'gold':0,
          'diamond':0,
          'wood':0,
          'rock':0,
          'money':0,
          'sand':0,
          'salt':0,
          'ruby':0,
          'shugar':0,
          'mushroom':0,
          'meat':0,
          'fish':0,
          'egg':0,
          'water':0,
          'iridium':0,
          'hunger':100,
          'maxhunger':100,
          'buildings':[],
          'farm':None,
          'animals':[],
          'exp':0,
          'level':1,
          'tutorial':1,
          'tforest':0,
          'thouse':0,
          'building':0,
          'farming':0
         }


if True:
 try:
   print('7777')
   bot.polling(none_stop=True,timeout=600)
 except (requests.ReadTimeout):
        print('!!! READTIME OUT !!!')           
        bot.stop_polling()
        time.sleep(1)
        check = True
        while check==True:
          try:
            bot.polling(none_stop=True,timeout=1)
            print('checkkk')
            check = False
          except (requests.exceptions.ConnectionError):
            time.sleep(1)
   
   
        

   
#if __name__ == '__main__':
 # bot.polling(none_stop=True)

#while True:
#    try:
  #      bot.polling()
 #   except:
  #      pass
#    time.sleep(1)
       
